package com.example.uicomponents.data

import com.example.uicomponents.domain.model.Contact
import com.example.uicomponents.domain.model.ContactWithPhoto
import com.example.uicomponents.domain.model.SimpleContact
import java.util.*

object DataProvider {

    private val names = """Юдицкий Артем Арсениевич 
Ёлкина Ольга Ефимовна 
Устимович Антип Модестович 
Мишнева Лада Игнатиевна 
Дюгаева Оксана Анатолиевна 
Жиров Кир Никифорович 
Яндашевский Григорий Евстафиевич 
Саракаев Викентий Якубович 
Чайка Варвара Николаевна 
Эйлера Светлана Ростиславовна 
Кольцова Розалия Иларионовна 
Суснина Раиса Никитевна 
Низьев Виталий Самуилович 
Никулаичев Прокл Андронович 
Якубенко Артем Юриевич 
Гулина Пелагея Афанасиевна 
Ямилов Пахом Михеевич 
Шихранов Максимильян Прокофиевич 
Берёзкина Анисья Кузьмевна 
Мороцкий Аристарх Миронович 
Суслякова Ксения Владиленовна 
Киреева Агата Борисовна 
Мещерякова Эвелина Романовна 
Михальченков Данила Венедиктович 
Яклашкина Агния Ипполитовна 
Канадцева Владислава Андрияновна 
Игошев Валерий Григориевич 
Кашникова Виктория Святославовна 
Новиков Василий Яковович 
Кручинкин Валентин Кондратович 
Статник Герасим Никитевич 
Юдачёв Терентий Афанасиевич 
Ухова Агата Александровна 
Разумов Прохор Наумович 
Няшин Вацлав Вадимович 
Плеханов Семен Валериевич 
Ефремовича Роза Станиславовна 
Нилина Инесса Владиленовна 
Юркова Анфиса Якововна 
Мосина Нона Брониславовна 
Заболотный Федот Ерофеевич 
Овчинников Григорий Эрнстович 
Кушнарёва Зоя Геннадиевна 
Богатов Эммануил Ипполитович 
Холодов Вацлав Юриевич 
Мяукин Всеслав Еремеевич 
Низовцов Ефрем Леонидович 
Могутов Федот Родионович 
Сафиюлин Игорь Матвеевич 
Павлов Лев Венедиктович 
Зверева Ефросиния Иосифовна 
Габулова Лидия Марковна 
Одинцов Ростислав Маркович 
Язькова Доминика Ефимовна 
Овечкина Христина Андрияновна 
Родикова Злата Казимировна 
Дагирова Галина Ипполитовна 
Ядова Ираида Михеевна 
Науменко Агата Федотовна 
Якин Руслан Герасимович 
Кривоухова Ника Брониславовна 
Десятков Харитон Венедиктович 
Яхин Вячеслав Титович 
Шурьева Инна Давидовна 
Головченко Марианна Юлиевна 
Демидова Владислава Потаповна 
Яхненко Римма Никитевна 
Поздов Феофан Остапович 
Стеблева Владислава Трофимовна 
Чалый Валерьян Михаилович 
Рязанова Всеслава Николаевна 
Крымова Алина Ростиславовна 
Коченкова Лариса Несторовна 
Лебедева Христина Давидовна 
Веденина Оксана Иосифовна 
Дубин Семён Федотович 
Шемякин Агап Олегович 
Поздов Федор Богданович 
Борисюка Дина Георгиевна 
Дубровин Гаврила Самсонович 
Бершова Розалия Никитевна 
Машуков Парфен Эрнестович 
Устинов Моисей Назарович 
Огарков Данила Гордеевич 
Михалёва Регина Несторовна 
Мукосеева Марианна Федотовна 
Сарайкина Доминика Филипповна 
Поличев Феликс Моисеевич 
Лунина Раиса Брониславовна 
Набалкин Кир Никанорович 
Зорина Варвара Игнатиевна 
Соколов Самсон Григориевич 
Ягемана Кира Олеговна 
Любимцев Борислав Самсонович 
Явид Моисей Назарович 
Никоненко Лада Евгениевна 
Пондякова Регина Яновна 
Киселев Дементий Владиславович 
Суходолин Арсений Казимирович 
Лепёхина Ирина Казимировна """

    val photoUrls = listOf(
        "https://www.freepngimg.com/thumb/man/2-2-man-transparent.png",
        "https://msk.siss.ru/uploads/content_new/images/7985/original.jpg",
        "https://i08.fotocdn.net/s120/4457bfdb0630114c/user_l/2752282676.jpg",
        "https://avatars.mds.yandex.net/get-zen_doc/163667/pub_5ba54db6bbc66500aa417909_5ba9f163519f9a00aa934afd/scale_1200",
        "https://avatars.mds.yandex.net/get-pdb/1627222/248eee0f-8d85-4753-bf7a-b24a1fe4841d/s1200?webp=false",
        "https://avatars.mds.yandex.net/get-zen_doc/1911932/pub_5d788b6fbc251400bfe2db6e_5d788bf7d7859b00ad2b8401/scale_1200",
        "https://images.wallpaperscraft.ru/image/doktor_haus_house_md_akter_hyu_lori_lico_doktor_gregori_haus_2019_1600x1200.jpg",
        "https://avatars.mds.yandex.net/get-pdb/879261/45f1f6f9-7f20-4cf6-9276-5e0f14bfb923/s1200",
        "https://avatars.mds.yandex.net/get-zen_doc/1889358/pub_5d12e7d455106500ae4206a1_5d12edff1d43fe00af3daf6d/scale_1200",
        "https://avatars.mds.yandex.net/get-zen_doc/39788/pub_5b38b21fdfc2ce00a839aef6_5b38b23c56364700a95379fa/scale_1200"
    )

    fun stubContacts(): List<Contact> = names.split("\n")
        .mapIndexed { index, name ->
            if (Random().nextBoolean()) {
                ContactWithPhoto(
                    photoUrl = photoUrls[index % photoUrls.lastIndex],
                    fullName = name
                )
            } else {
                SimpleContact(name)
            }
        }
}
